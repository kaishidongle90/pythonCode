搭建django环境


0. 安装虚拟环境（按需求，可不操作）

sudo apt-get install python-virtualenv
sudo easy_install virtualenvwrapper
mkvirtualenv [虚拟环境名称]

1. 将开发环境所需的安装包信息收集，并重新安装

pip freeze > django_project_rpm.txt

django_py2) python@ubuntu: cat django_project_rpm.txt 
Django==1.8.2
django-redis-sessions==0.5.6
django-tinymce==2.4.0
MySQL-python==1.2.5
Pillow==3.4.1
pkg-resources==0.0.0
redis==2.10.5


2. 安装所需要的软件包

pip install -r plist.txt


3. 修改项目下的setting文件
 
 26 DEBUG = False   # 将debug信息关闭  否则在访问报错是，会显示urls配置
 28 ALLOWED_HOSTS = ['*']  # 允许任意主机连接


4.  安装wsgi

pip install uwsgi  

5.  在项目的根目录下创建uwsgi.ini文件并配置

cd /qing/django/datatest/

vim uwsgi.ini

[uwsgi]
socket=192.168.13.45           # 外网ip:端口（使用nginx连接时，使用socket）
http=外网ip:端口（直接做web服务器，使用http）  #单独使用wsgi时用这个  使用nginx
chdir=/qing/django/datatest    #项目根目录
wsgi-file=datatest/wsgi.py            #项目中wsgi.py文件的目录，相对于项目根目录
processes=4
threads=2
master=True
pidfile=uwsgi.pid
daemonize=uswgi.log


6. wsgi 相关命令您（启动）

启动：uwsgi --ini uwsgi.ini
停止：uwsgi --stop uwsgi.pid
重启：uwsgi --reload uwsgi.pid   # 注意pid的路径为项目的根目录
使用http协议查看网站运行情况，运行正常，但是静态文件无法加载


7. 安装nginx

tar zxpf nginx-1.6.3.tar.gz
cd nginx-1.6.3/
 ./configure --prefix=/usr/local/nginx && make &&  sudo make install


8. nginx相关命令

查看版本：sudo sbin/nginx -v
启动：sudo sbin/nginx
停止：sudo sbin/nginx -s stop
重启：sudo sbin/nginx -s reload
通过浏览器查看nginx运行结果
指向uwsgi项目：编辑conf/nginx.conf文件

9. 配置nginx
sudo vim /usr/local/nginx/conf/nginx.conf
 43         location / {
 44 #            root   html;
 45 #            index  index.html index.htm;
 46             include uwsgi_params;
 47             uwsgi_pass 192.168.13.45:8000;
 48         }


10 启动nginx
sudo /usr/local/nginx/sbin/nginx  #启动
sudo /usr/local/nginx/sbin/nginx  -s reload   #重启


11. 测试
http://192.168.13.45/qing/paginator  


12. 配置静态文件： 静态文件交给nginx处理 ，效率更高，让wsgi处理动态文件

    sudo vim /usr/local/nginx/conf/nginx.conf
 50         location /static{
 51             alias /var/www/django/static/;
 52         }



13. 创建静态文件夹并设置755权限
sudo mkdir -p /var/www/django/static/
sudo chmod 777 /var/www/django/static


14. 在项目的setting中添加如下：

   #114 STATIC_URL = '/static/'       #  此方法可以在html页面（F12）中隐藏static目录的结构 配合templates中的html使用
   #STATICFILES_DIRS = [	  #  目录图片的存放位置 
   #116     os.path.join(BASE_DIR,'static'),
   #117 ]
118 STATIC_ROOT='/var/www/test5/static/' #使用nginx时 配置此选项


15. 收集静态文件
python manage.py collectstatic


16. 重启服务
uwsgi --reload /qing/django/datatest/uwsgi.pid
sudo /usr/local/nginx/sbin/nginx  -s reload



问题：

1. 访问不到：  查看pid是否正确
2. 在setting中打开debug=True  ，  or  将socket 换成http（wsgi服务）


